#!/usr/bin/python3

>>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul
>>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
array([[ 7, 10],
           [15, 22]])

# test a non list
>>> lazy_matrix_mul("test", [[1, 2], [3, 4]])
Traceback (most recent call last):
	...
TypeError: m_a must be a list

# test a non list of lists
# (using non ints b/c list of lists should be triggered first)
>>> lazy_matrix_mul(["test", "str"], [[1, 2], [3, 4]])
Traceback (most recent call last):
	...
TypeError: m_a must be a list of lists

# test empty list
>>> lazy_matrix_mul([[1, 2], [3, 4]], [])
Traceback (most recent call last):
	...
ValueError: m_b can't be empty

# test empty list
>>> lazy_matrix_mul([[]], [[1, 2], [3, 4]])
Traceback (most recent call last):
	...
ValueError: m_a can't be empty

# test a list of lists with non ints
>>> lazy_matrix_mul([[1, 2], ['c', "holb"]], [[1, 2], [3, 4]])
Traceback (most recent call last):
	...
TypeError: m_a should contain only integers or floats

# test non-rectangle matrix
>>> lazy_matrix_mul([[1, 2], [3, 4, 5]], [[1, 2], [3, 4]])
Traceback (most recent call last):
	...
TypeError: each row of m_a must be of the same size

>>> lazy_matrix_mul([[1, 2, 3], [3, 4, 5]], [[1, 2, 5], [3, 4]])
Traceback (most recent call last):
	...
TypeError: each row of m_b must be of the same size

# check if they can't be multiplied
>>> lazy_matrix_mul([[1, 2]], [[1, 2], [2, 3], [4, 5]])
Traceback (most recent call last):
	...
ValueError: m_a and m_b can't be multiplied

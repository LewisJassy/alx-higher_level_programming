#!/usr/bin/python3

>>> matrix_mul = __import__("100-matrix_mul").matrix_mul
>>> matrix_mul((1, 2, 3), [1, 2, 3])
Traceback (most recent call)
    ...
TypeError: m-a must be a list

>>> matrix_mul([1, 2,3], (1, 2, 3))
Traceback (most recent call)
    ...
TypeError: m_b must be a list

>>> matrix_mul([[1, 2, 3], [1, 2, 3]], [1, 2, 3])
Traceback (most recent call)
    ...
TypeError: m_b must be a list of lists

>>> matrix_mul([1, 2, 3], [[1, 2, 3], [1, 2, 3]])
Traceback (most recent call)
    ...
TypeError: m_a must be a list of lists

>>> matrix_mul([], [1,2,3])
Traceback (most recent call)
    ...
ValueError: m-a can't be empty

>>> matrix_mul([[1,2,3], [1,2]], [])
Traceback (most recent call)
    ...
ValueError: m-b can't be empty

>>> matrix_mul([[1,2,3], [1,"a"]], [1.5,2,3])
Traceback (most recent call)
    ...
TypeError: m_a should contain only integers or floats

>>> matrix_mul([[1,2,3], [1,2]], [1.5,2,3, "j"])
Traceback (most recent call)
    ...
TypeError: m_b should contain only integers or floats

>>> matrix_mul([1,2,3], [1,2])
Traceback (most recent call)
    ...
TypeError: each row of m_a must be of the same size

>>> matrix_mul([1,2,3], [1,2,3,4])
Traceback (most recent call)
    ...
TypeError: each row of m_b must be of the same size

>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
[[7, 10], [15, 22]]

>>> multiply_matrices([[1, 2], [3, 4]], [[5, 6], [7, 8], [9, 10]])
Traceback (most recent call last):
    ...
ValueError: m_a and m_b can't be multiplied

>>> multiply_matrices([[1, 2], [3, 'four']], [[5, 6], [7, 8]])
Traceback (most recent call last):
    ...
TypeError: m_a should contain only integers or floats

>>> multiply_matrices([[1, 2], [3, 4]], [[5, 6], [7, 'eight']])
Traceback (most recent call last):
    ...
TypeError: m_b should contain only integers or floats